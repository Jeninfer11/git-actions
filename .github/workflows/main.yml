name: Deploy Locally with Self-Hosted Runner

on:
  push:
    branches: [ "master" ]  # O usa 'main' si es tu rama principal
  workflow_dispatch: # Permite ejecutar el pipeline manualmente

# Variables de entorno para que docker-compose las use
env:
  DOCKER_PROJECT_NAME: 'micro-product-actions'
  APP_CONTAINER_NAME: 'product_app_2025'
  DB_CONTAINER_NAME: 'h2-db'
  DB_NAME: 'product-app-db'
  DB_USER: 'admin'
  DB_PASSWORD: 'admin123'

jobs:
  build-and-deploy:
    name: Build, Analyze and Deploy Locally
    runs-on: self-hosted

    steps:
      # 1. Descargar el c√≥digo del repositorio en el runner
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2. Configurar el entorno de Java y Maven
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      # 3. Compilar con Maven
      - name: Build with Maven
        run: mvn -B clean package -DskipTests

      # 4. Ejecutar an√°lisis con SonarQube
      - name: SonarQube Analysis
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          echo "üîé Iniciando an√°lisis con SonarQube..."
          mvn verify sonar:sonar \
            -Dsonar.projectKey=micro-product \
            -Dsonar.host.url=http://localhost:9000 \
            -Dsonar.login=$SONAR_TOKEN

      # 5. Desplegar la aplicaci√≥n con Docker Compose
      - name: Deploy with Docker Compose
        run: |
          echo "‚úÖ Iniciando despliegue en el runner local..."
          
          cd docker
          
          echo "üßπ Limpiando despliegue anterior (si existe)..."
          docker-compose -p ${{ env.DOCKER_PROJECT_NAME }} down -v --remove-orphans || echo "‚ö†Ô∏è No se encontr√≥ un despliegue anterior para limpiar."

          echo "üèóÔ∏è Construyendo y levantando los servicios..."
          docker-compose -p ${{ env.DOCKER_PROJECT_NAME }} up -d --build

          echo "‚è≥ Esperando 30 segundos para que la DB se estabilice..."
          sleep 30

          echo "üíæ Inicializando base de datos desde init.sql..."
          cat ../sql/init.sql | docker exec -i ${{ env.DB_CONTAINER_NAME }} mysql -u${{ env.DB_USER }} -p${{ env.DB_PASSWORD }} ${{ env.DB_NAME }}

          echo "üîç Verificando estado de los contenedores..."
          docker-compose -p ${{ env.DOCKER_PROJECT_NAME }} ps

          echo "üóíÔ∏è Mostrando los √∫ltimos logs de la aplicaci√≥n:"
          docker logs --tail 100 ${{ env.APP_CONTAINER_NAME }}

          echo "üéâ ‚úì Despliegue local completado exitosamente."
